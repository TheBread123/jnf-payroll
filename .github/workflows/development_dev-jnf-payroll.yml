# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Full-stack app to Azure Web App - dev-jnf-payroll

on:
  push:
    branches:
      - development
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Build React frontend
        run: |
          cd frontend
          npm run build

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
      
      - name: Install Python dependencies
        run: pip install -r requirements.txt
        
      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)

      - name: Copy React build to Flask static folder
        run: |
          # Remove existing directories
          rm -rf static templates 2>/dev/null || true
          
          # Create directories
          mkdir -p static templates
          
          # Copy all files from build root (excluding the nested static folder)
          find frontend/build -maxdepth 1 -not -name "static" -not -name "build" -exec cp -r {} static/ \; 2>/dev/null || true
          
          # Copy the contents of the nested static folder to Flask's static root
          if [ -d "frontend/build/static" ]; then
            cp -r frontend/build/static/* static/ 2>/dev/null || true
          fi
          
          # Copy index.html to templates
          cp frontend/build/index.html templates/

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            release.zip
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_FE8241577F02462CBCDF9A9957D364BE }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_AEB8B83D2C9C487FA73A062F49A91ADA }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_34DC8F7864FC486AA493926343FC888C }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'dev-jnf-payroll'
          slot-name: 'Production'
          